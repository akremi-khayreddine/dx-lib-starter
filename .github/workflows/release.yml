name: release    
                               
on: 
 pull_request:
  types: [closed] 
 repository_dispatch:   
  types: [merge]

env:
  NODE_VERSION: "12.x"            # node version to use
  PACKAGES_PATH: $HOME/packages   # directory used to store user data in /home/runner/packages.
  SECRETS_PATH: $HOME/secrets     # directory used to store secrets in /home/runner/secrets.
  SCRIPTS_PATH: ./.github/scripts # directory used for github actions scripts.
  APP_NAME: dx-app             # application's name.
  APP_DIST: dist/dx-app/       # Application dist path.
  TEST_VERSION: "0.0.8"  

jobs:
  start:
   if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
   runs-on: [ubuntu-latest]
   steps:
      - uses: actions/checkout@master
      - name: Webhook
        if: always()
        env:
          CONTEXT: ${{ toJson(github) }} 
          JOB: "{ 'name': 'start', 'status': '${{ job.status }}', 'next': 'Build and Deploy' }"
        run: |
          chmod -R +x ./.github/scripts 
          node ./.github/scripts/webhook.js
   
  release:
    needs: [start]
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Filesystem Config
        run: |
          #chmod -R +x ${{ env.SCRIPTS_PATH }}
          mkdir -p ${{ env.PACKAGES_PATH }}   
          mkdir -p ${{ env.SECRETS_PATH }}
      - uses: actions/checkout@master

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://npm.pkg.github.com/
          scope: "@distinctlab"   
                     
      - name: Install - Build
        run: |
          npm ci
          npm run ng build --prod dx-app
        env:
          CI: true
          
        
      - name: Package Artifacts
        run: |
          tar zcvf ${{ env.APP_NAME }}-${{ env.TEST_VERSION }}.tar.gz  ${{ env.APP_DIST }}



      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TEST_VERSION }}
          release_name: Release ${{ env.TEST_VERSION }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.APP_NAME }}-${{ env.TEST_VERSION }}.tar.gz
          asset_name: ${{ env.APP_NAME }}-${{ env.TEST_VERSION }}.tar.gz
          asset_content_type: application/gzip
           
      - name: Deploy App
        uses: w9jds/firebase-action@master
        env:
         FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        with:
         args: deploy --only hosting:dx-lib-starter -m "${{ env.TEST_VERSION }}"    
       
      - name: Webhook
        if: always()
        env:
          CONTEXT: ${{ toJson(github) }}
          RELEASE: ${{ steps.create_release.outputs.id }}
          JOB: "{ 'name': 'Build and Deploy', 'status': '${{ job.status }}' }"
        run: |
          chmod -R +x ./.github/scripts
          node ./.github/scripts/webhook.js
