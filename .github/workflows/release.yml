name: Create release
'on':
  pull_request:
    types: [closed]
  repository_dispatch:
    types: [merge]
env:
  NODE_VERSION: 12.x
  PACKAGES_PATH: $HOME/packages
  SECRETS_PATH: $HOME/secrets
  SCRIPTS_PATH: ./.github/scripts
  APP_NAME: dx-app
  APP_DIST: dist/dx-app/
  VERSION: 0.0.1
  RUN_ID: '${{ github.run_id }}'
  TRIGGER: pull_request
  TRIGGER_ID: '${{ github.event.pull_request.number }}'
  WORKFLOW_ID: '${{ github.event.repository.name }}-preview'
  WEBHOOK_URL: '${{ secrets.WEBHOOK_URL'
jobs:
  start:
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    runs-on: [ubuntu-latest]
    steps: [{name: Webhook, env: {JOB: '{ ''name'': ''start'', ''status'': ''${{ job.status }}'', ''next'': ''Build and Deploy'' }'}, run: "|\n         chmod -R +x ./.github/scripts\n         ./.github/scripts/webhook.sh\n      "}]
  release:
    needs: [start]
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps: [{name: Filesystem Config, run: "#chmod -R +x ${{ env.SCRIPTS_PATH }}\nmkdir -p ${{ env.PACKAGES_PATH }}   \nmkdir -p ${{ env.SECRETS_PATH }}\n"}, {uses: actions/checkout@master}, {name: 'Use Node.js ${{ env.NODE_VERSION }}', uses: actions/setup-node@v1, with: {node-version: '${{ env.NODE_VERSION }}', registry-url: 'https://npm.pkg.github.com/', scope: '@distinctlab'}}, {name: Install - Build, run: "npm ci\nnpm run ng build --prod dx-app\n", env: {CI: true}}, {name: Package Artifacts, run: "tar zcvf ${{ env.APP_NAME }}-${{ env.VERSION }}.tar.gz  ${{ env.APP_DIST }}\n"}, {name: Create Release, id: create_release, uses: actions/create-release@v1.0.0, env: {GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'}, with: {tag_name: '${{ env.VERSION }}', release_name: 'Release ${{ env.VERSION }}', draft: false, prerelease: false}}, {name: Upload Release Asset, id: upload-release-asset, uses: actions/upload-release-asset@v1.0.1, env: {GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'}, with: {upload_url: '${{ steps.create_release.outputs.upload_url }}', asset_path: './${{ env.APP_NAME }}-${{ env.VERSION }}.tar.gz', asset_name: '${{ env.APP_NAME }}-${{ env.VERSION }}.tar.gz', asset_content_type: application/gzip}}, {name: Deploy App, uses: w9jds/firebase-action@master, env: {FIREBASE_TOKEN: '${{ secrets.FIREBASE_TOKEN }}'}, with: {args: 'deploy --only hosting:dx-lib-starter -m "${{ env.VERSION }}"'}}, {name: Webhook, env: {JOB: '{ ''name'': ''Build and Deploy'', ''status'': ''${{ job.status }}'' }'}, run: "|\n         chmod -R +x ./.github/scripts\n         ./.github/scripts/webhook.sh\n      "}]
